void MavlinkTelemetry::rc_value_changed(int channelIdx,uint channelValue){
    if(channelIdx > 0 && channelIdx < m_rc_values.size()){
        m_rc_values.at(channelIdx)=channelValue;
        qDebug() << "MavlinkTelemetry::rc"<<channelIdx<<"="<< channelValue;
        emit update_RC_MavlinkBase (m_rc_values);
    }else{
        qDebug()<<"Error mavlink channel out of bounds"<<channelIdx;
    }
}

/*void MavlinkTelemetry::sendRC()
{
    QSettings settings;
    bool enable_rc = settings.value("enable_rc", false).toBool();
    //temporarily dsabled
    if(true){
        return;
    }
    if (enable_rc == true){
        mavlink_message_t msg;
        mavlink_msg_rc_channels_override_pack(QOpenHDMavlinkHelper::getSysId(), MAV_COMP_ID_MISSIONPLANNER, &msg, 1, 0,
                                              m_rc_values[0],m_rc_values[1],m_rc_values[2],m_rc_values[3],m_rc_values[4],m_rc_values[5],m_rc_values[6],m_rc_values[7],
                m_rc_values[8],m_rc_values[9],m_rc_values[10],m_rc_values[11],m_rc_values[12],m_rc_values[13],m_rc_values[14],m_rc_values[15],
                m_rc_values[16],m_rc_values[17]);
            sendData(msg);
    }
    else {
        return;
    }
}*/
